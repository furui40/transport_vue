const state = {
    columnWidthMap: {
        timestamp: '180',
        weightKg: '120',
        vehicleLength: '120',
        lane: '80',
        axleCount: '100',
        speed: '80',
        temperature: '100',
        direction: '80',
        crossLane: '80',
        type: '100',
        axleWeight1: '120',
        axleWeight2: '120',
        axleWeight3: '120',
        axleWeight4: '120',
        axleWeight5: '120',
        axleWeight6: '120',
        wheelbase1: '120',
        wheelbase2: '120',
        wheelbase3: '120',
        wheelbase4: '120',
        wheelbase5: '120',
        vehicleTypeCode: '120',
        vehicleType: '120',
        axle1Kn: '100',
        axle2Kn: '100',
        axle3Kn: '100',
        offset: '100',
        ambientTemperature: '120',
        temperature1: '120',
        dewPointTemperature: '140',
        ambientHumidity: '120',
        airPressure: '120',
        totalRadiation1Instant: '160',
        uvradiationInstant: '160',
        windDirection: '120',
        instantWindSpeed: '140',
        windSpeed2Min: '140',
        windSpeed10Min: '140',
        rainfallIntervalAccumulated: '160',
        rainfallDailyAccumulated: '160',
        totalRadiation1DailyAccumulated: '180',
        uvradiationDailyAccumulated: '180',
        illuminance: '120',
        voltage: '120',
        applyId: '150',
        userId: '150',
        dataType: '150',
        fields: '200',
        startTime: '180',
        stopTime: '180',
        status: '100',
        userEmail: '180',
        msg: '120',
    },
    columnLabelMap: {
        id: "编号",
        timestamp: "时间",
        weightKg: "总重KG",
        vehicleLength: "车长",
        lane: "车道",
        axleCount: "轴数",
        speed: "速度",
        temperature: "温度",
        direction: "方向",
        crossLane: "跨道",
        type: "类型",
        axleWeight1: "轴重1",
        axleWeight2: "轴重2",
        axleWeight3: "轴重3",
        axleWeight4: "轴重4",
        axleWeight5: "轴重5",
        axleWeight6: "轴重6",
        wheelbase1: "轴距1",
        wheelbase2: "轴距2",
        wheelbase3: "轴距3",
        wheelbase4: "轴距4",
        wheelbase5: "轴距5",
        vehicleTypeCode: "车型编号",
        vehicleType: "车型",
        axle1Kn: "轴1KN",
        axle2Kn: "轴2KN",
        axle3Kn: "轴3KN",
        offset: "偏移",
        timestamp: "时间",
        ambientTemperature: "环温(℃)",
        temperature1: "温度1(℃)",
        dewPointTemperature: "露点温度(℃)",
        ambientHumidity: "环湿(%RH)",
        airPressure: "气压(hPa)",
        totalRadiation1Instant: "总辐射1瞬时(W/㎡)",
        uvradiationInstant: "紫外辐射瞬时(W/㎡)",
        windDirection: "风向(°)",
        instantWindSpeed: "瞬时风速(m/s)",
        windSpeed2Min: "2分钟风速(m/s)",
        windSpeed10Min: "10分钟风速(m/s)",
        rainfallIntervalAccumulated: "雨量间隔累计(mm)",
        rainfallDailyAccumulated: "雨量日累计(mm)",
        totalRadiation1DailyAccumulated: "总辐射1日累计(MJ/㎡)",
        uvradiationDailyAccumulated: "紫外辐射日累计(MJ/㎡)",
        illuminance: "光照度(KLux)",
        voltage: "电量(V)",
        applyId: '申请ID',
        userId: '用户ID',
        dataType: '数据类型',
        fields: '数据项名称',
        startTime: '开始时间',
        stopTime: '结束时间',
        status: '状态',
        userEmail: '用户邮箱',
        msg: '附加信息',
        wet: '湿度',
    },
    channelNames: {
        1: {
            1: '1-1-P-1', 2: '1-1-P-2', 3: '1-1-P-3', 4: '1-1-S-1', 5: '1-1-S-2', 6: '1-1-S-3',
            7: '1-1-S-4', 8: '1-1-S-5', 9: '1-1-S-6', 10: '1-1-T-1', 11: '1-1-T-2', 12: '1-2-P-1',
            13: '1-2-P-2', 14: '1-2-P-3', 15: '1-2-S-1', 16: '1-2-S-2', 17: '1-2-S-3', 18: '1-2-S-4',
            19: '1-2-S-5', 20: '1-2-S-6', 21: '1-2-T-1', 22: '1-2-T-2', 23: '1-2-ZYB-1 红',
            24: '1-2-ZYB-1 绿', 25: '1-2-ZYB-2 红', 26: '1-2-ZYB-2 绿', 27: '1-3-P-1', 28: '1-3-P-2',
            29: '1-3-P-3', 30: '1-3-S-1', 31: '1-3-S-2', 32: '1-3-S-3',
        },
        2: {
            1: '1-1-S-4', 2: '1-3-S-5', 3: '1-3-S-6', 4: '1-3-H-1', 5: '1-3-H-2', 6: '1-3-H-3',
            7: '1-3-H-4', 8: '1-3-H-5', 9: '1-3-H-6', 10: '1-3-Z-1', 11: '1-3-Z-2', 12: '1-3-Z-3',
            13: '1-3-Z-4', 14: '1-3-Z-5', 15: '1-3-Z-6', 16: '1-3-Z-7', 17: '1-3-Z-8', 18: '1-3-Z-9',
            19: '1-3-Z-10', 20: '1-3-T-1', 21: '1-3-T-2', 22: '1-3-ZYB-1 红', 23: '1-3-ZYB-1 绿',
            24: '1-3-ZYB-2 红', 25: '1-3-ZYB-2 绿', 26: '1-4-T-1', 27: '1-4-T-2',
        },
        3: {
            1: '2-1-P-1', 2: '2-1-P-2', 3: '2-1-P-3', 4: '2-1-S-1', 5: '2-1-S-2', 6: '2-1-S-3',
            7: '2-1-S-4', 8: '2-1-S-5', 9: '2-1-S-6', 10: '2-1-T-1', 11: '2-1-T-2', 12: '2-2-P-1',
            13: '2-2-P-2', 14: '2-2-P-3', 15: '2-2-S-1', 16: '2-2-S-2', 17: '2-2-S-3', 18: '2-2-S-4',
            19: '2-2-S-5', 20: '2-2-S-6', 21: '2-2-T-1', 22: '2-2-T-2', 23: '2-2-ZYB-1 红',
            24: '2-2-ZYB-1 绿', 25: '2-2-ZYB-2 红', 26: '2-2-ZYB-2 绿', 27: '2-3-P-1', 28: '2-3-P-2',
            29: '2-3-P-3', 30: '2-3-S-1', 31: '2-3-S-2', 32: '2-3-S-3',
        },
        4: {
            1: '2-1-S-4', 2: '2-3-S-5', 3: '2-3-S-6', 4: '2-3-H-1', 5: '2-3-H-2', 6: '2-3-H-3',
            7: '2-3-H-4', 8: '2-3-H-5', 9: '2-3-H-6', 10: '2-3-Z-1', 11: '2-3-Z-2', 12: '2-3-Z-3',
            13: '2-3-Z-4', 14: '2-3-Z-5', 15: '2-3-Z-6', 16: '2-3-Z-7', 17: '2-3-Z-8', 18: '2-3-Z-9',
            19: '2-3-Z-10', 20: '2-3-T-1', 21: '2-3-T-2', 22: '2-3-ZYB-1 红', 23: '2-3-ZYB-1 绿',
            24: '2-3-ZYB-2 红', 25: '2-3-ZYB-2 绿', 26: '2-4-T-1', 27: '2-4-T-2',
        },
    },
};

const getters = {
    getColumnWidth: (state) => (key) => {
        return state.columnWidthMap[key] || '150'; // 默认宽度为 150
    },
    getColumnLabel: (state) => (key) => {
        const match = key.match(/^(\d+)_Ch(\d+)_(ori|act|rev\d+)$/);
        if (match) {
            const [_, decoder, channel, type] = match;
            const channelName = state.channelNames[decoder]?.[channel] || key;
            const suffixMap = { ori: '原始值', act: '实际值' };
            let suffix = suffixMap[type] || (type.startsWith('rev') ? `修正值${type.slice(3)}` : '');
            return suffix ? `${channelName} ${suffix}` : channelName;
        }
        if (key.includes('_')) {
            const [baseId, fieldType] = key.split('_');
            const typeMap = { w: '温度', t: '湿度' };
            return `${baseId}${typeMap[fieldType] || ''}`;
        }
        return state.columnLabelMap[key] || key;
    },
    getChannelName: (state) => (decoder, channel) => state.channelNames[decoder]?.[channel] || '暂无',
};

export default {
    namespaced: true, // 启用命名空间
    state,
    getters,
};